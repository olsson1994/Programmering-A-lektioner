introduktion-till-javascript.markdown
# JavaScript #
Viktigaste du behöver veta?

 * Du hittar bra information på [Mozilla Devoloper Network](https://developer.mozilla.org/en/JavaScript/)
  * Mycket annat om JavaScript på nätet är dålig information och vilseledande.
   * Lättläst, men längre, kod **sparar jobb** jämfört med kort och svärläst kod.

  ## kort historik ##

 * Netsape vill ha skript i webbläsaren
 * Brenden Eich får bara _två veckor_ på sig, innan första verisionen presenterades
 * kallades först _mocha_, sedan _LiveScript_ (sept 1995)
 * Bytte namn av **marknadsföringsskäl** till JavaScript (dec 1995)
 * _namnet_ ägs av Oracle, som köpt Sun, där java uppfanns
 * Microsoft kallar sin verision JScript

## Användning ##

 * I webbläsaren: "Client side scripting"
 * På servern: "server side scripting" (ovanligt fram tills 2010)
 * I andra program, som _makrospråk_ (adobe photoshop, m. fl. open/libre Office)
 * I flash under namnet _ActionScript_
 * För utveckling av _widgets_ och mobila _appar_
 *etc.

JavaScript != "Java light"

## Standardisering ##
HTML, CSS och DOM standardiseras av **W3C**.

JavaScript av **ECMA** (European Computer Manufacturers Association)

Därav namnet ECMAScript.

## versioner ##

Netscape, sedan Mozilla, har alltid varit drivande i utvecklingen och skapat _de facto_
implementeringen som andra följer.

[detaljerad tabell på Wikipedia](http://en.wikipedia.org/wiki/JavaScript#Verisions

## JavaScript kontra DOM och BOM ##

[JavaScript körs i en **värdmiljö**]
vanligtvis en webbläsare

För att man ska kunna göra något, så erbjuder värden gränssnitt = **api** = application program interface

BOM = Browser Object Model

DOM = Decument Object Model

Exempel - detta är DOM och BOM

    document.getElementById("foo") // hitta element med id = foo

    window.setInterval(foo, 100)   // Kör funktionen foo var 100:e millisekund

    window.location.href           // Adressen till sidan där man är

    elem.addEventListener()        // Lägg till en händelse lyssnare

Detta är "ren" JavaScript:

    var foo = 53;
    var elev = { namn: "Kalle", klass: "9c" };

## DOM som det stora problemet ##


Dit hör **händelshanterare** (event handlers):

    element.onclick = function;

## Hur hantera detta ##

### Dålig lösning: Browsersniff ###

    if ( navigator.appName.indexOf() ) {}
    if ( document.layers ) {}

## Ajax ##

Somliga webbplatser kan uppdatera en **del** av sidan med en ny information som skickats från servern.

## God praxis ##

**DHTML** - JavaScript på 90-talet bidrog till att göra webben sämre

1. HTML styr upp **innehåll**
2. CSS styr upp **utseende**
3. DOM och JavaScript stry upp **beteende**

Det finns också varningssignaler du bör känna till:

    <body onload="foo()"> dvs HTML och JavaScript blandas
    document.write()
    eval()
    <script language="javascript">   Attributet language är föråldrat och icke-standard

### Exempel på dålig information ###

För att gömma JavaScript för webbläsare som fanns på marknaden före 1996 så användes följande knep:

    <script>
    <!--
    // JS kod här dold inom HTML-komentarer
    -->
    </script>

 Det finns fortfarande artiklar och instrutionsfilmer på Youtube som 15 år senare säger att du *måste* använda detta knep!
